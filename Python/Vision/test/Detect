import cv2
import time
import numpy as np
from picamera2 import Picamera2, Preview
picam2=Picamera2(1)
dispW=720
dispH=480
camera_config = picam2.create_video_configuration({'format': 'BGR888', 'size' : (dispW,dispH)})
picam2.configure(camera_config)
picam2.start()
fps=0
pos=(20,40)
font=cv2.FONT_HERSHEY_DUPLEX
height=1.5
fpsColor=(0,0,255)
weight=(3)
rColor=(0,0,255)
thickness=3 #-1 creates solid box

bodyCascade=cv2.CascadeClassifier('/home/charles/Desktop/HW/Python/Vision/Models/haarcascade_fullbody.xml')
faceCascade=cv2.CascadeClassifier('/home/charles/Desktop/HW/Python/Vision/Models/haarcascade_frontalface_alt_tree.xml')
eyeCascade=cv2.CascadeClassifier('/home/charles/Desktop/HW/Python/Vision/Models/haarcascade_eye.xml')
 
 
while True:
    tStart=time.time()
    frame= picam2.capture_array()
    frameRGB=cv2.cvtColor(frame,cv2.COLOR_BGR2RGB)
    #hframe=cv2.flip(frame,-1)
    frameGray=cv2.cvtColor(frameRGB,cv2.COLOR_RGB2GRAY)
    bodies=bodyCascade.detectMultiScale(frameRGB, 1.3,5)
    for body in bodies:
        x,y,w,h=body
        cv2.rectangle(roiColor, (x,y), (x+w, y+h),(255,0,0),3)
        roiGray=frameGray[y:y+h,x:x+w]
        roiColor=frameRGB[y:y+h,x:x+w]
        faces=faceCascade.detectMultiScale(frameRGB,2.25,5)
        for face in faces:
            x,y,w,h=face
            cv2.rectangle(frameRGB,(x,y),(x+w,y+h),(255,0,0),3)
            roiGray=frameGray[y:y+h,x:x+w]
            roiColor=frameRGB[y:y+h,x:x+w]
            eyes=eyeCascade.detectMultiScale(roiGray,2.25,5)
            for eye in eyes:
                x,y,w,h=eye
                cv2.rectangle(roiColor,(x,y),(x+w,y+h),(255,0,0),3)
                roiGray=frameGray[y:y+h,x:x+w]
                roiColor=frameRGB[y:y+h,x:x+w]
    cv2.putText(frameRGB,str(int(fps))+' FPS',pos,font,height,rColor,weight)
    cv2.imshow("Camera", frameRGB)
    cv2.imshow("Gray", frameGray)
    if cv2.waitKey(1)==ord('q'):
        break
    tEnd=time.time()
    loopTime=tEnd-tStart
    fps=.9*fps + .1*(1/loopTime)
cv2.destroyAllWindows()