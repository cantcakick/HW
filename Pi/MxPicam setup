sudo apt install libcap-dev
sudo apt install libcamera* #may or may not work, if it doesn't install from synaptic
#or
git clone https://git.libcamera.org/libcamera/libcamera.git
cd libcamera
meson setup build
ninja -C build install



#If libcamera* gives an error use synaptic and install camera-calibration-parsers-tools gstreamer1.0-libcamera gstreamer1.0-libcamera-dbgsym libcamera-apps libcamera-calibration-parsers-dev libcamera-calibration-parsers0d libcamera-dev libcamera-doc libcamera-info-managed-dev libcamera-info-manager0d libcamera-ipa libcamera-ipa-dbgsym libcamera-tools libcamera-tools-dbgsym libcamera-v4l2 libcamera-v4l2-dbgsym libcamera0.1 libcamera0.1-dbgsym libcamera0.2 libcamera0.2-dbgsym pipewire-libcamera pipewire-libcamera-dbgsym python3-libcamera python3-libcamera-dbgsym python3-picamera2 rpicam-apps
sudo apt install code thonny 
sudo apt install 2to3 python-is-python3
sudo pip3 install gpiozero
pip install --upgrade pip setuptools wheel --break-system-packages
pip install tensorflow opencv-python opencv-contrib-python opencv-python-headless numpy --break-system-packages

sudo pip install RPi.GPIO
sudo apt-get install python-smbus python3-pantilthat python3-rpi.gpio
pip install piServo piServoCtl --break-system-packages
sudo pip3 install adafruit-circuitpython-pca9685
sudo pip3 install adafruit-circuitpython-servokit


#check cv2 install
import cv2
print(cv2.__version__)


sudo rm /usr/lib/python3.11/EXTERNALLY-MANAGED
or
export PATH=/home/charles/.local/bin:$PATH
#^fixes issue with OS not recognizing Opencv and tensorflow file path
sudo apt install make g++ pkg-config libgl1-mesa-dev libfontconfig1-dev libxkbcommon-x11-dev 
#^ needed for OpenCV to use GUI
#not needed libgtk-3-dev libxcb*-dev
sudo apt-get install libopencv-dev python3-opencv

#Install docker
curl -sSL https://get.docker.com | sh
sudo usermod -aG docker $USER

sudo sh -eux <<EOF
# Install newuidmap & newgidmap binaries
apt-get install -y uidmap
EOF
dockerd-rootless-setuptool.sh install


Coral TPU
echo "deb https://packages.cloud.google.com/apt coral-edgetpu-stable main" | sudo tee /etc/apt/sources.list.d/coral-edgetpu.list

curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -

sudo apt-get update

sudo apt-get install libedgetpu1-std
sudo apt-get install python3-pycoral
mkdir coral && cd coral

git clone https://github.com/google-coral/pycoral.git

cd pycoral

TFLite
#pip install tflite-runtime tflite_support
sudo rm /usr/lib/python3.11/EXTERNALLY-MANAGED
git clone https://github.com/tensorflow/examples --depth 1
cd examples/lite/examples/object_detection/raspberry_pi
python3 -m pip install virtualenv --break-system-packages
python3 -m venv tf
ls 
source tf/bin/activate
sudo pip3 install mediapipe  
#tflite is supported by mediapipe.  Install this before trying to install tflite
export PATH=/home/charles/.local/bin:$PATH

# The script install the required dependencies and download the TFLite models.
sh setup.sh
python3 detect.py \
  --model efficientdet_lite0.tflite
#With Coral TPU
python3 detect.py \
  --enableEdgeTPU
  --model efficientdet_lite0_edgetpu.tflite

cd /etc/apt
sudo cp trusted.gpg trusted.gpg.d